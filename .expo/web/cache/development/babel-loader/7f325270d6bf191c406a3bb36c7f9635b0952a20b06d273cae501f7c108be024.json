{"ast":null,"code":"var _jsxFileName = \"/Users/elleiryc/Desktop/Arl copie/arl.inc/src/components/dashboard/ProgressBar.jsx\",\n  _this = this;\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { COLORS } from '../../styles/colors';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar ProgressBar = function ProgressBar(_ref) {\n  var current = _ref.current,\n    total = _ref.total,\n    label = _ref.label;\n  var progress = Math.min(current / total, 1);\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(Text, {\n      style: styles.label,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, _this), _jsxDEV(View, {\n      style: styles.progressContainer,\n      children: _jsxDEV(View, {\n        style: [styles.progressBar, {\n          width: `${progress * 100}%`\n        }]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, _this), _jsxDEV(Text, {\n      style: styles.count,\n      children: [current, \" / \", total]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, _this);\n};\nvar styles = StyleSheet.create({\n  container: {\n    padding: 16\n  },\n  label: {\n    fontSize: 16,\n    marginBottom: 8,\n    color: COLORS.gray\n  },\n  progressContainer: {\n    height: 8,\n    backgroundColor: COLORS.lightGray,\n    borderRadius: 4,\n    overflow: 'hidden'\n  },\n  progressBar: {\n    height: '100%',\n    backgroundColor: COLORS.primary,\n    borderRadius: 4\n  },\n  count: {\n    marginTop: 8,\n    fontSize: 14,\n    color: COLORS.gray,\n    textAlign: 'right'\n  }\n});\nexport default ProgressBar;","map":{"version":3,"names":["React","View","Text","StyleSheet","COLORS","jsxDEV","_jsxDEV","ProgressBar","_ref","current","total","label","progress","Math","min","style","styles","container","children","fileName","_jsxFileName","lineNumber","columnNumber","_this","progressContainer","progressBar","width","count","create","padding","fontSize","marginBottom","color","gray","height","backgroundColor","lightGray","borderRadius","overflow","primary","marginTop","textAlign"],"sources":["/Users/elleiryc/Desktop/Arl copie/arl.inc/src/components/dashboard/ProgressBar.jsx"],"sourcesContent":["import React from 'react';\nimport { View, Text, StyleSheet } from 'react-native';\nimport { COLORS } from '../../styles/colors';\n\nconst ProgressBar = ({ current, total, label }) => {\n  const progress = Math.min(current / total, 1);\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.label}>{label}</Text>\n      <View style={styles.progressContainer}>\n        <View style={[styles.progressBar, { width: `${progress * 100}%` }]} />\n      </View>\n      <Text style={styles.count}>\n        {current} / {total}\n      </Text>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n  },\n  label: {\n    fontSize: 16,\n    marginBottom: 8,\n    color: COLORS.gray,\n  },\n  progressContainer: {\n    height: 8,\n    backgroundColor: COLORS.lightGray,\n    borderRadius: 4,\n    overflow: 'hidden',\n  },\n  progressBar: {\n    height: '100%',\n    backgroundColor: COLORS.primary,\n    borderRadius: 4,\n  },\n  count: {\n    marginTop: 8,\n    fontSize: 14,\n    color: COLORS.gray,\n    textAlign: 'right',\n  },\n});\n\nexport default ProgressBar;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAE1B,SAASC,MAAM,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAAC,IAAA,EAAkC;EAAA,IAA5BC,OAAO,GAAAD,IAAA,CAAPC,OAAO;IAAEC,KAAK,GAAAF,IAAA,CAALE,KAAK;IAAEC,KAAK,GAAAH,IAAA,CAALG,KAAK;EAC1C,IAAMC,QAAQ,GAAGC,IAAI,CAACC,GAAG,CAACL,OAAO,GAAGC,KAAK,EAAE,CAAC,CAAC;EAE7C,OACEJ,OAAA,CAACL,IAAI;IAACc,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5BZ,OAAA,CAACJ,IAAI;MAACa,KAAK,EAAEC,MAAM,CAACL,KAAM;MAAAO,QAAA,EAAEP;IAAK;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KAAO,CAAC,EACzCjB,OAAA,CAACL,IAAI;MAACc,KAAK,EAAEC,MAAM,CAACQ,iBAAkB;MAAAN,QAAA,EACpCZ,OAAA,CAACL,IAAI;QAACc,KAAK,EAAE,CAACC,MAAM,CAACS,WAAW,EAAE;UAAEC,KAAK,EAAE,GAAGd,QAAQ,GAAG,GAAG;QAAI,CAAC;MAAE;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KAAE;IAAC;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KAClE,CAAC,EACPjB,OAAA,CAACJ,IAAI;MAACa,KAAK,EAAEC,MAAM,CAACW,KAAM;MAAAT,QAAA,GACvBT,OAAO,EAAC,KAAG,EAACC,KAAK;IAAA;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KACd,CAAC;EAAA;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,GAAAC,KACH,CAAC;AAEX,CAAC;AAED,IAAMP,MAAM,GAAGb,UAAU,CAACyB,MAAM,CAAC;EAC/BX,SAAS,EAAE;IACTY,OAAO,EAAE;EACX,CAAC;EACDlB,KAAK,EAAE;IACLmB,QAAQ,EAAE,EAAE;IACZC,YAAY,EAAE,CAAC;IACfC,KAAK,EAAE5B,MAAM,CAAC6B;EAChB,CAAC;EACDT,iBAAiB,EAAE;IACjBU,MAAM,EAAE,CAAC;IACTC,eAAe,EAAE/B,MAAM,CAACgC,SAAS;IACjCC,YAAY,EAAE,CAAC;IACfC,QAAQ,EAAE;EACZ,CAAC;EACDb,WAAW,EAAE;IACXS,MAAM,EAAE,MAAM;IACdC,eAAe,EAAE/B,MAAM,CAACmC,OAAO;IAC/BF,YAAY,EAAE;EAChB,CAAC;EACDV,KAAK,EAAE;IACLa,SAAS,EAAE,CAAC;IACZV,QAAQ,EAAE,EAAE;IACZE,KAAK,EAAE5B,MAAM,CAAC6B,IAAI;IAClBQ,SAAS,EAAE;EACb;AACF,CAAC,CAAC;AAEF,eAAelC,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}