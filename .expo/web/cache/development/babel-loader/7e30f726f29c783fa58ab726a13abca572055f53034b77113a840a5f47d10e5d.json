{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { NotificationService } from './NotificationService';\nvar POINTS_KEY = '@rewards_points';\nvar REWARDS_HISTORY_KEY = '@rewards_history';\nexport var RewardService = {\n  getPoints: function () {\n    var _getPoints = _asyncToGenerator(function* () {\n      var points = yield AsyncStorage.getItem(POINTS_KEY);\n      console.log('Points récupérés depuis AsyncStorage :', points);\n      return points ? parseInt(points) : 0;\n    });\n    function getPoints() {\n      return _getPoints.apply(this, arguments);\n    }\n    return getPoints;\n  }(),\n  addPoints: function () {\n    var _addPoints = _asyncToGenerator(function* (amount) {\n      var currentPoints = yield this.getPoints();\n      var newPoints = currentPoints + amount;\n      yield AsyncStorage.setItem(POINTS_KEY, newPoints.toString());\n      if (newPoints >= 300) {\n        yield NotificationService.sendRewardNotification(newPoints);\n      }\n      if (newPoints >= 600) {\n        yield NotificationService.sendRewardNotification(newPoints);\n      }\n      if (newPoints >= 900) {\n        yield NotificationService.sendRewardNotification(newPoints);\n      }\n      return newPoints;\n    });\n    function addPoints(_x) {\n      return _addPoints.apply(this, arguments);\n    }\n    return addPoints;\n  }(),\n  getRewardsHistory: function () {\n    var _getRewardsHistory = _asyncToGenerator(function* () {\n      var history = yield AsyncStorage.getItem(REWARDS_HISTORY_KEY);\n      return history ? JSON.parse(history) : [];\n    });\n    function getRewardsHistory() {\n      return _getRewardsHistory.apply(this, arguments);\n    }\n    return getRewardsHistory;\n  }(),\n  addRewardToHistory: function () {\n    var _addRewardToHistory = _asyncToGenerator(function* (reward) {\n      var history = yield this.getRewardsHistory();\n      var updatedHistory = [_objectSpread({\n        id: Date.now(),\n        date: new Date().toISOString()\n      }, reward)].concat(_toConsumableArray(history));\n      yield AsyncStorage.setItem(REWARDS_HISTORY_KEY, JSON.stringify(updatedHistory));\n      return updatedHistory;\n    });\n    function addRewardToHistory(_x2) {\n      return _addRewardToHistory.apply(this, arguments);\n    }\n    return addRewardToHistory;\n  }()\n};","map":{"version":3,"names":["AsyncStorage","NotificationService","POINTS_KEY","REWARDS_HISTORY_KEY","RewardService","getPoints","_getPoints","_asyncToGenerator","points","getItem","console","log","parseInt","apply","arguments","addPoints","_addPoints","amount","currentPoints","newPoints","setItem","toString","sendRewardNotification","_x","getRewardsHistory","_getRewardsHistory","history","JSON","parse","addRewardToHistory","_addRewardToHistory","reward","updatedHistory","_objectSpread","id","Date","now","date","toISOString","concat","_toConsumableArray","stringify","_x2"],"sources":["/Users/elleiryc/Desktop/Arl copie/arl.inc/src/services/RewardService.js"],"sourcesContent":["import AsyncStorage from '@react-native-async-storage/async-storage';\nimport { NotificationService } from './NotificationService';\n\nconst POINTS_KEY = '@rewards_points';\nconst REWARDS_HISTORY_KEY = '@rewards_history';\n\nexport const RewardService = {\n  async getPoints() {\n    const points = await AsyncStorage.getItem(POINTS_KEY);\n    console.log('Points récupérés depuis AsyncStorage :', points); // Debug\n    return points ? parseInt(points) : 0;\n  },\n\n  async addPoints(amount) {\n    const currentPoints = await this.getPoints();\n    const newPoints = currentPoints + amount;\n    await AsyncStorage.setItem(POINTS_KEY, newPoints.toString());\n\n    // Vérifier les paliers de récompense\n    if (newPoints >= 300) {\n      await NotificationService.sendRewardNotification(newPoints);\n    }\n    if (newPoints >= 600) {\n      await NotificationService.sendRewardNotification(newPoints);\n    }\n    if (newPoints >= 900) {\n      await NotificationService.sendRewardNotification(newPoints);\n    }\n\n    return newPoints;\n  },\n\n  async getRewardsHistory() {\n    const history = await AsyncStorage.getItem(REWARDS_HISTORY_KEY);\n    return history ? JSON.parse(history) : [];\n  },\n\n  async addRewardToHistory(reward) {\n    const history = await this.getRewardsHistory();\n    const updatedHistory = [\n      {\n        id: Date.now(),\n        date: new Date().toISOString(),\n        ...reward,\n      },\n      ...history,\n    ];\n    await AsyncStorage.setItem(REWARDS_HISTORY_KEY, JSON.stringify(updatedHistory));\n    return updatedHistory;\n  },\n};\n"],"mappings":";;;;;AAAA,OAAOA,YAAY,MAAM,2CAA2C;AACpE,SAASC,mBAAmB,QAAQ,uBAAuB;AAE3D,IAAMC,UAAU,GAAG,iBAAiB;AACpC,IAAMC,mBAAmB,GAAG,kBAAkB;AAE9C,OAAO,IAAMC,aAAa,GAAG;EACrBC,SAAS;IAAA,IAAAC,UAAA,GAAAC,iBAAA,cAAG;MAChB,IAAMC,MAAM,SAASR,YAAY,CAACS,OAAO,CAACP,UAAU,CAAC;MACrDQ,OAAO,CAACC,GAAG,CAAC,wCAAwC,EAAEH,MAAM,CAAC;MAC7D,OAAOA,MAAM,GAAGI,QAAQ,CAACJ,MAAM,CAAC,GAAG,CAAC;IACtC,CAAC;IAAA,SAJKH,SAASA,CAAA;MAAA,OAAAC,UAAA,CAAAO,KAAA,OAAAC,SAAA;IAAA;IAAA,OAATT,SAAS;EAAA;EAMTU,SAAS;IAAA,IAAAC,UAAA,GAAAT,iBAAA,YAACU,MAAM,EAAE;MACtB,IAAMC,aAAa,SAAS,IAAI,CAACb,SAAS,CAAC,CAAC;MAC5C,IAAMc,SAAS,GAAGD,aAAa,GAAGD,MAAM;MACxC,MAAMjB,YAAY,CAACoB,OAAO,CAAClB,UAAU,EAAEiB,SAAS,CAACE,QAAQ,CAAC,CAAC,CAAC;MAG5D,IAAIF,SAAS,IAAI,GAAG,EAAE;QACpB,MAAMlB,mBAAmB,CAACqB,sBAAsB,CAACH,SAAS,CAAC;MAC7D;MACA,IAAIA,SAAS,IAAI,GAAG,EAAE;QACpB,MAAMlB,mBAAmB,CAACqB,sBAAsB,CAACH,SAAS,CAAC;MAC7D;MACA,IAAIA,SAAS,IAAI,GAAG,EAAE;QACpB,MAAMlB,mBAAmB,CAACqB,sBAAsB,CAACH,SAAS,CAAC;MAC7D;MAEA,OAAOA,SAAS;IAClB,CAAC;IAAA,SAjBKJ,SAASA,CAAAQ,EAAA;MAAA,OAAAP,UAAA,CAAAH,KAAA,OAAAC,SAAA;IAAA;IAAA,OAATC,SAAS;EAAA;EAmBTS,iBAAiB;IAAA,IAAAC,kBAAA,GAAAlB,iBAAA,cAAG;MACxB,IAAMmB,OAAO,SAAS1B,YAAY,CAACS,OAAO,CAACN,mBAAmB,CAAC;MAC/D,OAAOuB,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACF,OAAO,CAAC,GAAG,EAAE;IAC3C,CAAC;IAAA,SAHKF,iBAAiBA,CAAA;MAAA,OAAAC,kBAAA,CAAAZ,KAAA,OAAAC,SAAA;IAAA;IAAA,OAAjBU,iBAAiB;EAAA;EAKjBK,kBAAkB;IAAA,IAAAC,mBAAA,GAAAvB,iBAAA,YAACwB,MAAM,EAAE;MAC/B,IAAML,OAAO,SAAS,IAAI,CAACF,iBAAiB,CAAC,CAAC;MAC9C,IAAMQ,cAAc,IAAAC,aAAA;QAEhBC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;QACdC,IAAI,EAAE,IAAIF,IAAI,CAAC,CAAC,CAACG,WAAW,CAAC;MAAC,GAC3BP,MAAM,GAAAQ,MAAA,CAAAC,kBAAA,CAERd,OAAO,EACX;MACD,MAAM1B,YAAY,CAACoB,OAAO,CAACjB,mBAAmB,EAAEwB,IAAI,CAACc,SAAS,CAACT,cAAc,CAAC,CAAC;MAC/E,OAAOA,cAAc;IACvB,CAAC;IAAA,SAZKH,kBAAkBA,CAAAa,GAAA;MAAA,OAAAZ,mBAAA,CAAAjB,KAAA,OAAAC,SAAA;IAAA;IAAA,OAAlBe,kBAAkB;EAAA;AAa1B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}